@model List<Appointment>

<div class="container-fluid py-4">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">
                <i class="bi bi-calendar-check me-2"></i>My Appointments
            </h2>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Date</th>
                                    <th>Service</th>
                                    <th>Assistant</th>
                                    <th>Time</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                            @foreach (var appointment in Model)
                            {
                                        <tr>
                                            <td>@appointment.Nobet.Date.ToString("MM/dd/yyyy")</td>
                                            <td>@appointment.Nobet.Department.Name</td>
                                            <td>@appointment.Nobet.Assistant.FullName</td>
                                            <td>@appointment.Time.ToString(@"hh\:mm")</td>
                                            <td>
                                                <span class="badge @GetStatusClass(appointment.Status)">
                                            @appointment.Status
                                                </span>
                                            </td>
                                            <td>
                                                <a asp-action="Details" asp-route-id="@appointment.ID"
                                                   class="btn btn-sm btn-info">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <button class="btn btn-sm btn-danger" onclick="deleteAppointment(@appointment.ID)">
                                                    <i class="bi bi-trash"></i> Delete
                                                </button>
                                            </td>
                                        </tr>
                            }
                            </tbody>
                        </table>
                    </div>
            }
            else
            {
                    <div class="alert alert-info text-center">
                        No scheduled appointments
                    </div>
            }
        </div>
    </div>
</div>

@section Styles {
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
}

@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            function deleteAppointment(appointmentId) {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("DeleteAppointment", "Appointment")',
                            type: 'POST',
                            data: { id: appointmentId },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Your appointment has been deleted.',
                                        'success'
                                    ).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        'There was an error deleting your appointment.',
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Error!',
                                    'There was an error deleting your appointment.',
                                    'error'
                                );
                            }
                        });
                    }
                });
            }
        </script>
}

@functions {
    private string GetStatusClass(AppointmentStatus status)
    {
        return status switch
        {
            AppointmentStatus.Pending => "bg-warning",
            AppointmentStatus.Confirmed => "bg-success",
            AppointmentStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }
}