// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pediatric_Service.Models;

#nullable disable

namespace Pediatric_Service.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241203135610_SeedDoctorTable")]
    partial class SeedDoctorTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pediatric_Service.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, Anytown, USA",
                            Email = "john.smith@example.com",
                            FullName = "Dr. John Smith",
                            Gender = "Male",
                            PhoneNumber = "123-456-7890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St, Othertown, USA",
                            Email = "jane.doe@example.com",
                            FullName = "Dr. Jane Doe",
                            Gender = "Female",
                            PhoneNumber = "098-765-4321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St, Sometown, USA",
                            Email = "emily.johnson@example.com",
                            FullName = "Dr. Emily Johnson",
                            Gender = "Female",
                            PhoneNumber = "555-123-4567"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
